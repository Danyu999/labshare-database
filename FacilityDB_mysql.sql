-- MySQL Script generated by MySQL Workbench
-- Thu Mar 30 23:48:22 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema FacilityDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema FacilityDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `FacilityDB` DEFAULT CHARACTER SET utf8 ;
USE `FacilityDB` ;

-- -----------------------------------------------------
-- Table `FacilityDB`.`Labs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`Labs` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `LabTitle` VARCHAR(255) NOT NULL,
  `Description` TEXT NULL,
  `Settings` TEXT NULL,
  `LabUrl` VARCHAR(45) NULL,
  `DBInstanceName` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `LabTitle_UNIQUE` (`LabTitle` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FacilityDB`.`Groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`Groups` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `GroupName` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FacilityDB`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`Users` (
  `ID` INT NOT NULL AUTO_INCREMENT COMMENT '	',
  `DisplayName` VARCHAR(255) NULL,
  `UserName` VARCHAR(255) NULL,
  `LabPI` VARCHAR(255) NULL,
  `Email` VARCHAR(255) NULL,
  `CAN` VARCHAR(45) NULL,
  `Lab` VARCHAR(255) NULL,
  `WorkPhone` VARCHAR(255) NULL COMMENT '		',
  `CellPhone` VARCHAR(45) NULL,
  `Building/Room` VARCHAR(255) NULL,
  `MailStopCode(MSC)` VARCHAR(45) NULL,
  `JobTitle` VARCHAR(45) NULL,
  `WorkCity` VARCHAR(45) NULL,
  `WorkZip` VARCHAR(45) NULL,
  `FaxNumber` VARCHAR(15) NULL,
  `CanDescription` TEXT NULL,
  `IsActive` TINYINT NULL,
  `RegistrationDate` DATETIME NULL,
  `GroupID` INT NULL,
  `PermissionID` INT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FacilityDB`.`Projects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`Projects` (
  `ID` INT NOT NULL AUTO_INCREMENT COMMENT '	',
  `SubmittedDate` DATETIME NULL,
  `LSID` VARCHAR(255) NULL COMMENT '	',
  `Client` VARCHAR(255) NULL,
  `ProjectMembers` VARCHAR(255) NULL,
  `Status` VARCHAR(45) NULL,
  `RegistrationDate` VARCHAR(255) NULL,
  `CAN` VARCHAR(255) NULL COMMENT '		',
  `Lab` VARCHAR(45) NULL,
  `LabPI` VARCHAR(45) NULL,
  `AssignedTo` VARCHAR(45) NULL,
  `Description` TEXT NULL,
  `LabGroupID` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `LabGroupID_idx` (`LabGroupID` ASC),
  CONSTRAINT `LabGroupID`
    FOREIGN KEY (`LabGroupID`)
    REFERENCES `FacilityDB`.`Groups` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FacilityDB`.`Permissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`Permissions` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Permission` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FacilityDB`.`Resources`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`Resources` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(255) NULL,
  `Description` TEXT NULL,
  `Group` VARCHAR(255) NULL,
  `Location` VARCHAR(255) NULL,
  `AutoApprove` TINYINT NULL,
  `AllowUserReservation` TINYINT NULL,
  `UserRequests` VARCHAR(45) NULL,
  `Options` VARCHAR(45) NULL,
  `NormalStartTime` DATETIME NULL,
  `NormalEndTime` DATETIME NULL,
  `AdvanceReserve` VARCHAR(45) NULL,
  `AdvanceReserveUnit` VARCHAR(45) NULL,
  `CancellationDeadline` VARCHAR(45) NULL,
  `DefaultCost` DOUBLE NULL,
  `MinimumSlotSize` DOUBLE NULL,
  `MaximumSlotSize` DOUBLE NULL,
  `DisplaySlotSize` DOUBLE NULL,
  `ReservationDeadline` DOUBLE NULL,
  `Availability` VARCHAR(45) NULL,
  `AvailabilityPage` VARCHAR(255) NULL,
  `Operator` VARCHAR(255) NULL,
  `ShowReservationToUsers` TINYINT NULL,
  `MinimumUserLevel` VARCHAR(45) NULL,
  `AllowWeekends` TINYINT NULL,
  `Manufacturer` VARCHAR(255) NULL,
  `Model` VARCHAR(255) NULL,
  `Serial` VARCHAR(255) NULL,
  `LocalDataUrl` VARCHAR(255) NULL,
  `BackupDataUrl` VARCHAR(255) NULL,
  `DataCollectionHost` VARCHAR(255) NULL,
  `BackupLocal` VARCHAR(255) NULL,
  `GroupID` INT NULL,
  `PermissionID` INT NULL,
  `LabID` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `LabGroupID_idx` (`GroupID` ASC),
  INDEX `PermissionId_idx` (`PermissionID` ASC),
  INDEX `Labs.LabID_idx` (`LabID` ASC),
  CONSTRAINT `Resources.GroupID`
    FOREIGN KEY (`GroupID`)
    REFERENCES `FacilityDB`.`Groups` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Resources.PermissionID`
    FOREIGN KEY (`PermissionID`)
    REFERENCES `FacilityDB`.`Permissions` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Resources.LabID`
    FOREIGN KEY (`LabID`)
    REFERENCES `FacilityDB`.`Labs` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FacilityDB`.`DataLists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`DataLists` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ListName` VARCHAR(45) NOT NULL,
  `IsList` TINYINT NOT NULL,
  `LabID` INT NOT NULL,
  `Settings` TEXT NULL,
  `Forms` TEXT NULL,
  `Dashboards` TEXT NULL,
  `Fields` TEXT NULL,
  `GroupId` INT NULL,
  `PermissionID` INT NULL,
  `ParentList` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`),
  INDEX `LabID_idx` (`LabID` ASC),
  INDEX `GroupId_idx` (`GroupId` ASC),
  INDEX `PermissionID_idx` (`PermissionID` ASC),
  CONSTRAINT `DataLists.LabID`
    FOREIGN KEY (`LabID`)
    REFERENCES `FacilityDB`.`Labs` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `DataLists.GroupId`
    FOREIGN KEY (`GroupId`)
    REFERENCES `FacilityDB`.`Groups` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `DataLists.PermissionID`
    FOREIGN KEY (`PermissionID`)
    REFERENCES `FacilityDB`.`Permissions` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FacilityDB`.`ItemLevelPermission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`ItemLevelPermission` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `TableName` VARCHAR(45) NULL,
  `ItemID` INT NULL,
  `UserID` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `UserID_idx` (`UserID` ASC),
  CONSTRAINT `UserID`
    FOREIGN KEY (`UserID`)
    REFERENCES `FacilityDB`.`Users` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FacilityDB`.`FieldType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`FieldType` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `FieldType` VARCHAR(45) NOT NULL,
  `FieldLength` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FacilityDB`.`LabPages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`LabPages` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Title` VARCHAR(45) NULL,
  `Path` VARCHAR(45) NULL,
  `Template` TEXT NULL,
  `Style` VARCHAR(45) NULL,
  `LabID` INT NULL,
  `GroupID` INT NULL,
  `PermissionID` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `FacilityID_idx` (`LabID` ASC),
  INDEX `GroupID_idx` (`GroupID` ASC),
  INDEX `PermissionID_idx` (`PermissionID` ASC),
  CONSTRAINT `LabPages.LabID`
    FOREIGN KEY (`LabID`)
    REFERENCES `FacilityDB`.`Labs` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `LabPages.GroupID`
    FOREIGN KEY (`GroupID`)
    REFERENCES `FacilityDB`.`Groups` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `LabPages.PermissionID`
    FOREIGN KEY (`PermissionID`)
    REFERENCES `FacilityDB`.`Permissions` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FacilityDB`.`FacilityDB`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`FacilityDB` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Host` VARCHAR(45) NULL,
  `Port` VARCHAR(45) NULL,
  `UserName` VARCHAR(45) NULL,
  `Password` VARCHAR(45) NULL,
  `FacilityName` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `FacilityDB`.`UserLabs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`UserLabs` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `UserID` INT NOT NULL,
  `LabID` INT NOT NULL,
  `Permission` VARCHAR(45) NOT NULL,
  `GroupName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`),
  INDEX `Users.UserID_idx` (`UserID` ASC),
  INDEX `Labs.LabID_idx` (`LabID` ASC),
  CONSTRAINT `Users.UserID`
    FOREIGN KEY (`UserID`)
    REFERENCES `FacilityDB`.`Users` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Labs.LabID`
    FOREIGN KEY (`LabID`)
    REFERENCES `FacilityDB`.`Labs` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `FacilityDB` ;

-- -----------------------------------------------------
-- Placeholder table for view `FacilityDB`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`view1` (`id` INT);

-- -----------------------------------------------------
-- Placeholder table for view `FacilityDB`.`view2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `FacilityDB`.`view2` (`id` INT);

-- -----------------------------------------------------
--  routine1
-- -----------------------------------------------------

DELIMITER $$
USE `FacilityDB`$$
$$

DELIMITER ;

-- -----------------------------------------------------
-- View `FacilityDB`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FacilityDB`.`view1`;
USE `FacilityDB`;


-- -----------------------------------------------------
-- View `FacilityDB`.`view2`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `FacilityDB`.`view2`;
USE `FacilityDB`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

SHOW TABLES;
